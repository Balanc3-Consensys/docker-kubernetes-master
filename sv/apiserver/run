#!/bin/bash

sv start etcd || exit 1

source /etc/envvars

KUBE_APISERVER_OPTS="\
--insecure-port=8080 \
--secure-port=443 \
--etcd_servers=http://127.0.0.1:4001 \
--service-cluster-ip-range=172.27.0.0/16 \
--admission-control=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds,PodPreset \
--authorization-mode=Node,RBAC \
--allow-privileged=true \
--anonymous-auth=false \
--runtime-config="api/all,settings.k8s.io/v1alpha1" \
--client-ca-file=/srv/kubernetes/api-server-ca.pem \
--tls-cert-file=/srv/kubernetes/api-server-cert.pem \
--tls-private-key-file=/srv/kubernetes/api-server-key.pem \
--storage-backend=etcd2 \
--storage-media-type=application/json \
--cloud-config="" \
--cloud-provider="" \
--event-ttl=1h \
--enable-swagger-ui=true \
--logtostderr=true \
--v=1 \
"

/vault-init.sh

grep "token " /dev/shm/KMASTER_TOKEN | awk '{print $2}' | xargs vault auth
rm /dev/shm/KMASTER_TOKEN

#API-Server cert and key
DATA=$(vault write --format=json kubernetes/issue/kube-apiserver common_name=$HOSTNAME)
echo $DATA|jq -r .data.issuing_ca > /srv/kubernetes/api-server-ca.pem
echo $DATA|jq -r .data.certificate > /srv/kubernetes/api-server-cert.pem
echo $DATA|jq -r .data.private_key > /srv/kubernetes/api-server-key.pem

exec 2>&1
exec kube-apiserver ${KUBE_APISERVER_OPTS}
